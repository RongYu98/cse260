import java.util.*;

public class CompareStuff{



    /* 
Compare linked lists, ArrayList and arrays) Write a test program that stores 5 million integers in a linked list, ArrayList and array and test the time to insert, traverse and delete the elements (one by one). 

     */
    public static LinkedList<Integer> makeLinkedList( int size ){
	LinkedList<Integer> ints = new LinkedList<Integer>();
	for ( int i=0; i<size; i++ ){
	    ints.addLast( i );
	}
	return ints;
    }
    public static ArrayList<Integer> makeArrayList( int size ){
	ArrayList<Integer> ints = new ArrayList<Integer>();
	for ( int i=0; i<size; i++ ){
	    ints.addLast( i );
	}
	return ints;
    }
    public static int[]  makeArray( int size ){
	int[] ints = new int[size];
	for ( int i=0; i<size; i++ ){
	    ints[i] = i;
	}
	return ints;
    }

    
    public static void transverseWithGet( LinkedList<Integer> ints ){
	// int size = ints.size();
	for ( int i=0; i<ints.size(); i++ ){
	    ints.get(i);
	}
    }

    public static void transverseIterator( LinkedList<Integer> ints ){
	ListIterator<Integer> it = ints.listIterator(0);
	while ( it.hasNext() ){
	    it.next();
	}
    }
    
    public static void main(String[] args){
	LinkedList<Integer> ints1 = makeLinkedList( 5000 );
	ArrayList<Integer> ints2 = makeArrayList( 5000 );
	int[] ints2 = makeArray( 5000 );

	
	long startTime = System.currentTimeMillis();
	transverseWithGet( ints1 );
	long endTime = System.currentTimeMillis();
	long executionTime = endTime - startTime;
	System.out.println("Execution Time of Transversing with Get: ");
	System.out.println( executionTime); // 1334
	System.out.println();

	startTime = System.currentTimeMillis();
	transverseIterator( ints1 );
	endTime = System.currentTimeMillis();
	executionTime = endTime - startTime;
	System.out.println("Execution Time of Transversing with Iterator: ");
	System.out.println(executionTime); // 2
	
	
    }



}





}
